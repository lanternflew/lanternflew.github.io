<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Markdown学习笔记</title>
    <link href="/2024/04/19/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/04/19/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Markdown-学习相关与总结"><a href="#Markdown-学习相关与总结" class="headerlink" title="Markdown 学习相关与总结"></a>Markdown 学习相关与总结</h1><h2 id="编辑器的选择"><a href="#编辑器的选择" class="headerlink" title="编辑器的选择"></a>编辑器的选择</h2><p>Markdown编辑器有很多，下面是我目前接触到的两种：</p><ul><li><a href="https://stackedit.cn/">stackedit中文版</a>  这是一个在线编辑器，可离线缓存  </li><li><a href="https://code.visualstudio.com/">VScode</a>  应用广泛，安装markdown插件即可提升md文件编辑体验</li></ul><h2 id="标题的相关语法"><a href="#标题的相关语法" class="headerlink" title="标题的相关语法"></a>标题的相关语法</h2><p>Markdown中标题分级，且共有两种分级格式</p><ul><li>使用 &#x3D; 和 - 标记一级和二级标题<blockquote><p>一级标题<br> =&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br> 二级标题<br> -—————-</p></blockquote></li></ul><img src="/2024/04/19/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/eg-title.png" class="" title="example"><ul><li>使用 # 号标记<blockquote><p># 一级标题<br>## 二级标题<br>### 三级标题</p></blockquote></li></ul><img src="/2024/04/19/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/eg-title2.png" class="" title="example"><p>需要注意的是，一级和二级标题下有下划线，而三级标题开始是由短竖线开始</p><h2 id="段落及其格式"><a href="#段落及其格式" class="headerlink" title="段落及其格式"></a>段落及其格式</h2><ul><li><p>换行  </p><ol><li>段落后使用两个以上空格加上回车可换行，同时使用制表符tab再回车同样可换行<blockquote><p>第一行<kbd>空格</kbd><kbd>空格</kbd><br>  第二行</p></blockquote></li></ol><blockquote><p>第一行<kbd>Tab</kbd><br>  第二行  </p></blockquote><ol start="2"><li>也可以在段落后面使用一个空行来表示重新开始一个段落<blockquote><p>第一行<br>  <kbd></kbd><br>  第二行</p></blockquote></li></ol></li><li><p>字体<br>Markdown中可使用字体有限，当然这也保持了文档的简洁，在markdown中可使用以下字体：</p><blockquote><p>*斜体文本*<br>  _斜体文本_<br>  **粗体文本**<br>  __粗体文本__<br>  ***粗斜体文本***<br>  ___粗斜体文本___</p></blockquote></li></ul><img src="/2024/04/19/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/eg-word.png" class="" title="example"><ul><li><p>线</p><ol><li>可以在一行中用三个以上的星号*、减号-、底线_来建立一个<u>分隔线</u>，行内不能有其他东西。<blockquote><p>***<br>* * *<br>*****<br>-----<br>---------</p></blockquote></li><li>可以在文字的两端加上两个波浪线~~来建立一个<u>删除线</u><blockquote><p>~~删除线~~</p></blockquote></li><li>可以通过HTML语言的&lt;u&gt;标签来建立一个<u>下划线</u><blockquote><p>&lt;u&gt;带下划线文本&lt;&#x2F;u&gt;</p></blockquote></li></ol></li><li><p>脚注<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="脚注是对文本的补充说明">[1]</span></a></sup><br>脚注的添加有如下格式：</p><blockquote><p>创建脚注格式类似这样 [^2]<br>      [^2]: 我 是 真 焦 虑</p></blockquote></li></ul><p>创建脚注格式类似这样 <sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="我 是 真 焦 虑">[2]</span></a></sup>  </p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li>无序列表<br>无序列表使用星号*、加号+或是减号-作为列表标记，这些标记后面要添加一个空格，然后再填写内容<blockquote><p>* 第一项<br>* 第二项<br>* 第三项<br>+ 第一项<br>+ 第二项<br>+ 第三项<br>- 第一项<br>- 第二项<br>- 第三项   </p></blockquote></li><li>有序列表使用数字并加上.号来表示<blockquote><p>1. 第一项<br>2. 第二项<br>3. 第三项</p></blockquote></li><li>列表的嵌套<br>列表嵌套只需在子列表中的选项前面添加两个或四个空格即可<blockquote><ol><li>第一项：<br> - 第一项的第一个元素<br> - 第一项的第二个元素  </li><li>第二项：<br> - 第二项的第一个元素<br> - 第二项的第二个元素</li></ol></blockquote></li></ul><p>值得注意的是，在markdown中，父子关系的缩进都是四个空格</p><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><ul><li><p>在段落开头使用&gt;符号加<kbd>空格</kbd>来定义区块  </p><blockquote><p>&gt; 区块第一行<br>    &gt; 区块第二行<br>    &gt; 区块第一行     </p></blockquote></li><li><p>区块和列表之间也可以建立父子关系，这有助于我们进行信息的索引</p><blockquote><p>&gt; 区块中使用列表<br>    &gt; 1. 第一项<br>    &gt; 2. 第二项<br>    &gt; + 第一项<br>    &gt; + 第二项<br>    &gt; + 第三项</p></blockquote></li></ul><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><ul><li>片段<br>代码片段使用反引号<kbd>`</kbd>将其括起来<blockquote><p>`printf()`<br>    `if else`</p></blockquote></li><li>区块<br>使用<kbd>```</kbd>包裹一段代码，并指定一种语言（在第一行标明即可）<blockquote><p>`&#96;&#96;python<br>    str1 &#x3D; ‘hello’<br>    str2 &#x3D; ‘world’<br>    print(str1 + ‘ ‘ + str2)<br>    <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br>```python  <br>      str1 = <span class="hljs-string">&#x27;hello&#x27;</span>  <br>      str2 = <span class="hljs-string">&#x27;world&#x27;</span>  <br>      <span class="hljs-built_in">print</span>(str1 + <span class="hljs-string">&#x27; &#x27;</span> + str2)  <br></code></pre></td></tr></table></figure></p></blockquote></li></ul><img src="/2024/04/19/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/eg-code.png" class="" title="example"><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li>一般链接<br>链接的一般使用方法包括文字引用和直接链接<blockquote><p>[链接名称](链接地址)<br>    或者<br>    &lt;链接地址&gt;</p></blockquote></li><li>高级链接<br>通过一个变量来设置链接，这样的方法方便随时更改链接地址<blockquote><p>这是一个高级链接，使用<kbd>1</kbd>作为变量<br>    [scu][1]<br>    [1]: &#96;<a href="https://www.scu.edu.cn/">https://www.scu.edu.cn/</a></p></blockquote></li></ul><p>效果：   <a href="https://www.scu.edu.cn/">scu</a>  </p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><ul><li>Markdown图片语法格式为：<blockquote><p>![alt 属性文本](图片地址)<br>    ![alt 属性文本](图片地址 “可选标题”)</p></blockquote>图片地址可以是本地地址或网络地址，在hexo博客文章的本地地址引用中，通常是本地博客目录下的\source\img的图片，地址为\img\eg-code.png，‘eg-code.png’为图片名称</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul><li><p>单元格的分隔使用竖线<kbd>|</kbd>，表头和其他行使用短横线<kbd>----</kbd></p><blockquote><p> |  表头   | 表头  |<br>     |  —-  | —-  |<br>     | 单元格  | 单元格 |<br>     | 单元格  | 单元格 |</p></blockquote></li></ul><img src="/2024/04/19/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/eg-table.png" class="" title="example"><ul><li><p>另外，我们还可以设置表格的对齐方式</p><blockquote><p>-: 设置内容和标题栏居右对齐<br>    :- 设置内容和标题栏居左对齐<br>    :-: 设置内容和标题栏居中对齐</p></blockquote><p>注意，这些语法和行分隔线相关联  </p><blockquote><p>| 左对齐 | 右对齐 | 居中对齐 |<br>    | :—–| —-: | :—-: |<br>    | 单元格 | 单元格 | 单元格 |<br>    | 单元格 | 单元格 | 单元格 |</p></blockquote></li></ul><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格11111</td><td align="right">11111单元格</td><td align="center">11单元格111</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h2 id="其他技巧"><a href="#其他技巧" class="headerlink" title="其他技巧"></a>其他技巧</h2><ul><li><p>支持的 HTML 元素<br>markdwon支持部分html元素如：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等,（也许之后系统学习html会专门写一篇博客来介绍(bushi）)</p><blockquote><p>使用 &lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Del&lt;&#x2F;kbd&gt; 获取期末答案</p></blockquote><p>  使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 获取期末答案 </p></li><li><p>转义<br>和python，c一样，使用反斜杠转义特殊字符</p><blockquote><p>**文本加粗**<br>   \*\* 正常显示星号\*\*</p></blockquote><p>   <strong>文本加粗</strong><br>   ** 正常显示星号 **</p></li><li><p>公式<br>在markdown中，对数学公式默认有两种分隔符</p><ol><li>$…$ 或者\(…\) 中的数学表达式将会在行内显示。  </li><li>$$…$$ 或者 \[…\] 或者 &#96;&#96;&#96;math 中的数学表达式将会在块内显示。</li></ol><p> ‘’Markdown Preview Enhanced 使用 KaTeX 或者 MathJax 来渲染数学表达式。</p><p> KaTeX 拥有比 MathJax 更快的性能，但是它却少了很多 MathJax 拥有的特性。你可以查看 KaTeX supported functions&#x2F;symbols 来了解 KaTeX 支持那些符号和函数。’’<br> 引用自<a href="https://www.runoob.com/markdown/md-advance.html">菜鸟教程</a></p></li></ul><p>（待补充）</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>脚注是对文本的补充说明<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>我 是 真 焦 虑<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>明日方舟 sidestory巴别塔 读后感 &amp; 第一篇博客</title>
    <link href="/2024/04/11/first/"/>
    <url>/2024/04/11/first/</url>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><ul><li><p>剧情感受：</p><p>特雷西娅的离去和巴别塔的轰然倒塌是那乌托邦的梦碎，她败给了萨卡兹对现实的控诉和前文明的遗焰，可传承诸王的冠冕于阿米娅，打破诸王众魂对萨卡兹魔王的诅咒和黑夜的呢喃，剥离预言家的记忆，让一个脱离前文明使命的博士去追随本心编织泰拉世界的希望，是特雷西娅对理想的承载与坚持。</p></li></ul><p>“我们都应该歌颂万物生灵，歌颂我们自己”<br>一贯的明日方舟世界观，苦难与希望的歌颂，正是在源石上绽放的花，才让希望弥足珍贵</p><ul><li><p>玩法设计</p><p>捏么，明日方舟设计师，你是怎么想出来让玩家在最后通过选择游戏输赢和特雷西娅殿下的死亡来带入剧情的啊？我是真是被刀了又刀啊，完全体会到博士的纠结和愧疚了啊，yj你可真行啊，还有关卡线路被设置成心电图的形状啊，你是真会设计啊！！！，殿下在最后的剧情濒死了所以这心电图就平了是吧，正好是看完剧情能意识到这是渐停的心电图线啊，真是刀刀又刀刀啊，我劝你最好在五月的主线里对殿下好一点，yj你不是人啊yj！<br>二编：<br>普通关和ex关的标题分别代表了特雷西娅和特雷西斯的立场，而其中的关卡名是两兄妹的对话</p><ul><li>我赠予未来 我驻留往昔  </li><li>“如果，这就是你的选择”<br>“再见，我的敌人。再见，我的血亲”</li></ul></li></ul><p>&nbsp;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">五一主线更新时将再次补充<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>明日方舟</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
